---
import Button from './ui/Button.astro';
import { getConsoleUrl } from '../lib/env';

const navItems = [
  { href: '/pricing', label: 'Pricing' },
  { href: '/demo', label: 'Demo' },
  { href: '/contact', label: 'Contact' },
];

const currentPath = Astro.url.pathname;
const consoleUrl = getConsoleUrl(Astro.locals);
---

<header class="bg-white border-b border-gray-200">
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-between h-16">
      <div class="flex items-center">
        <a href="/" class="flex items-center">
          <img src="https://static.lexara.app/lexara_logo.svg" alt="Lexara" class="h-8" />
        </a>
      </div>
      
      <nav class="hidden md:flex items-center space-x-8">
        {navItems.map((item) => (
          <a
            href={item.href}
            class={`text-sm font-medium transition-colors ${
              currentPath === item.href
                ? 'text-gray-900'
                : 'text-gray-700 hover:text-gray-900'
            }`}
          >
            {item.label}
          </a>
        ))}
      </nav>
      
      <div class="hidden md:flex items-center space-x-4">
        <a href={`${consoleUrl}/api/auth/login`} class="text-sm font-medium text-gray-700 hover:text-gray-900">
          Sign In
        </a>
        <Button
          href={`${consoleUrl}/signup?utm_source=engage&utm_campaign=header`}
          size="small"
          variant="primary"
          class="!rounded"
        >
          Get Started
        </Button>
      </div>
      
      <div class="md:hidden">
        <button id="mobile-menu-button" class="p-2 rounded-md text-gray-600 hover:bg-gray-100">
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </div>
  
  <div id="mobile-menu" class="hidden md:hidden border-t border-gray-200">
    <div class="px-4 py-4 space-y-3">
      {navItems.map((item) => (
        <a
          href={item.href}
          class={`block text-sm font-medium ${
            currentPath === item.href
              ? 'text-gray-900'
              : 'text-gray-700'
          }`}
        >
          {item.label}
        </a>
      ))}
      <div class="pt-3 border-t border-gray-200 space-y-3">
        <a href={`${consoleUrl}/api/auth/login`} class="block text-sm font-medium text-gray-700">
          Sign In
        </a>
        <Button
          href={`${consoleUrl}/signup?utm_source=engage&utm_campaign=header`}
          size="small"
          variant="primary"
          class="!rounded w-full text-center"
        >
          Get Started
        </Button>
      </div>
    </div>
  </div>
</header>

<script is:inline>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('mobile-menu-button');
    const menu = document.getElementById('mobile-menu');
    
    button?.addEventListener('click', () => {
      menu?.classList.toggle('hidden');
      // Log event if analytics is available
      if (window.logClick) {
        window.logClick('mobile_menu_toggle');
      }
    });
    
    // Track navigation clicks
    document.querySelectorAll('nav a').forEach(link => {
      link.addEventListener('click', () => {
        if (window.logClick) {
          window.logClick('navigation', {
            destination: link.getAttribute('href'),
            label: link.textContent?.trim()
          });
        }
      });
    });
    
    // Track header CTA clicks
    document.querySelectorAll('a[href*="login"], a[href*="signup"]').forEach(link => {
      link.addEventListener('click', () => {
        if (window.logClick) {
          window.logClick('header_cta', {
            destination: link.getAttribute('href'),
            label: link.textContent?.trim()
          });
        }
      });
    });
  });
</script>